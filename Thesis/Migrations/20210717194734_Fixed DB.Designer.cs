// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thesis;

namespace Thesis.Migrations
{
    [DbContext(typeof(EquipmentContext))]
    [Migration("20210717194734_Fixed DB")]
    partial class FixedDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Thesis.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionEquip")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameEquip")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeEquip")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitEquip")
                        .HasColumnType("TEXT");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("Thesis.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberExperts")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberParticipants")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeEvent")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Thesis.Workplace", b =>
                {
                    b.Property<int>("WorkplaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameWorkplace")
                        .HasColumnType("TEXT");

                    b.HasKey("WorkplaceId");

                    b.ToTable("Workplaces");
                });

            modelBuilder.Entity("Thesis.WorkplaceForEvent", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkplaceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountPerPlace")
                        .HasColumnType("INTEGER");

                    b.HasKey("EquipmentId", "EventId", "WorkplaceId");

                    b.HasIndex("EventId");

                    b.HasIndex("WorkplaceId");

                    b.ToTable("WorkplaceForEvents");
                });

            modelBuilder.Entity("Thesis.WorkplaceForEvent", b =>
                {
                    b.HasOne("Thesis.Equipment", "Equipment")
                        .WithMany("WorkplaceForEvents")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thesis.Event", "Event")
                        .WithMany("WorkplaceForEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thesis.Workplace", "Workplace")
                        .WithMany("WorkplaceForEvents")
                        .HasForeignKey("WorkplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Event");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("Thesis.Equipment", b =>
                {
                    b.Navigation("WorkplaceForEvents");
                });

            modelBuilder.Entity("Thesis.Event", b =>
                {
                    b.Navigation("WorkplaceForEvents");
                });

            modelBuilder.Entity("Thesis.Workplace", b =>
                {
                    b.Navigation("WorkplaceForEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
